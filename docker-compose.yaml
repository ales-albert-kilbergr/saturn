# This docker compose makes use of unofficial images
# due to confluent only offering linux/amd arch images and not multi-platform.
# As soon as official multi-platform images are out, use them here.
# More info: https://eb7team.atlassian.net/browse/AP-695

---
version: '3'
services:
  mongo:
    image: mongo:latest
    container_name: oms-mongo
    ports:
      - 27017:27017
    volumes:
      - mongodb:/data/saturn-db
  zookeeper:
    image: kymeric/cp-zookeeper:latest
    hostname: zookeeper
    container_name: oms-zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: kymeric/cp-kafka:latest
    hostname: kafka
    container_name: oms-kafka
    depends_on:
      - zookeeper
    restart: 'on-failure'
    ports:
      - '9092:9092'
      - '29092:29092'
    expose:
      - '9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  order-management-service:
    container_name: order-management-service
    image: order-management-service:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile
    command: yarn nx serve order-management-service --host 0.0.0.0
    ports:
      - 3333:3333
    environment:
      NODE_ENV: development
      MONGO_URI: '${MONGO_URI}'
      MONGO_LOG_LEVEL: 5
      MONGO_MAX_POOL_SIZE: 20
      APP_PORT: 3333
      KAFKA_CLIENT_BROKER: '${KAFKA_CLIENT_BROKER}'
      KAFKA_CLIENT_CLIENT_ID: order-management-service
      KAFKA_CONSUMER_GROUP: order-management-service
    volumes:
      - ./apps/:/usr/src/app/apps/
      - ./libs/:/usr/src/app/libs
      - ./tools/:/usr/src/app/tools/
      - ./node_modules:/usr/src/app/node_modules
      - ./tsconfig.base.json:/usr/src/app/tsconfig.base.json
      - ./nx.json:/usr/nx.json
      - ./package.json:/usr/package.json
    depends_on:
      - mongo
  order-producer:
    container_name: order-producer
    image: order-producer:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile
    command: yarn nx serve order-producer --host 0.0.0.0
    ports:
      - 3334:3334
    environment:
      NODE_ENV: development
      APP_PORT: 3334
      KAFKA_CLIENT_BROKER: '${KAFKA_CLIENT_BROKER}'
      KAFKA_CLIENT_CLIENT_ID: order-producer
    volumes:
      - ./apps/:/usr/src/app/apps/
      - ./libs/:/usr/src/app/libs
      - ./tools/:/usr/src/app/tools/
      - ./node_modules:/usr/src/app/node_modules
      - ./tsconfig.base.json:/usr/src/app/tsconfig.base.json
      - ./nx.json:/usr/nx.json
      - ./package.json:/usr/package.json
  order-management-browser-app:
    container_name: order-management-browser-app
    image: order-management-browser-app:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile
    command: yarn nx serve order-management-browser-app --host 0.0.0.0 --port 4200
    ports:
      - 4200:4200
    expose:
      - 4200
    environment:
      - ORDER_MANAGEMENT_SERVICE_PROXY=http://order-management-service:3333
      - ORDER_MANAGEMENT_SERVICE_WS_PROXY=ws://order-management-service:3333
    volumes:
      - ./apps/:/usr/src/app/apps/
      - ./libs/:/usr/src/app/libs
      - ./tools/:/usr/src/app/tools/
      - ./node_modules:/usr/src/app/node_modules
      - ./tsconfig.base.json:/usr/src/app/tsconfig.base.json
      - ./nx.json:/usr/nx.json
      - ./package.json:/usr/package.json
volumes:
  mongodb:
